name: Build and Release Go Binaries

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

defaults:
  run:
    working-directory: ./server

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux] # Поддерживаем несколько операционных систем
        goarch: [arm, arm64] # Архитектуры для Raspberry Pi (32-бит и 64-бит)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache-dependency-path: |
            server/go.sum

      - name: Build Go binary
        run: |
          mkdir -p build  
          repo_name=${{ github.repository }}
          repo_name=${repo_name#*/}
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${repo_name} -ldflags '-w -s' .

      - name: Create tar.gz archive
        run: |
          cd build
          repo_name=${{ github.repository }}
          repo_name=${repo_name#*/}
          tar -czf ${repo_name}-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz ${repo_name}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: server/build/*.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: go-build-*
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: server/build/*.tar.gz
